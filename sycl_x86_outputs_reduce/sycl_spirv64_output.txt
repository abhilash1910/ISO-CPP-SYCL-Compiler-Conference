source_filename = "example.cpp"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

%"class.cl::sycl::id" = type { %"class.cl::sycl::detail::array" }
%"class.cl::sycl::detail::array" = type { [1 x i64] }
%"class.cl::sycl::accessor" = type { %"class.cl::sycl::detail::AccessorImplDevice", %union.anon }
%"class.cl::sycl::detail::AccessorImplDevice" = type { %"class.cl::sycl::id", %"class.cl::sycl::range", %"class.cl::sycl::range" }
%"class.cl::sycl::range" = type { %"class.cl::sycl::detail::array" }
%union.anon = type { i32 addrspace(1)* }
%"class.cl::sycl::nd_item" = type { %"class.cl::sycl::item", %"class.cl::sycl::item.3", %"class.cl::sycl::group" }
%"class.cl::sycl::item" = type { %"struct.cl::sycl::detail::ItemBase" }
%"struct.cl::sycl::detail::ItemBase" = type { %"class.cl::sycl::range.0", %"class.cl::sycl::id.2", %"class.cl::sycl::id.2" }
%"class.cl::sycl::range.0" = type { %"class.cl::sycl::detail::array.1" }
%"class.cl::sycl::detail::array.1" = type { [3 x i64] }
%"class.cl::sycl::id.2" = type { %"class.cl::sycl::detail::array.1" }
%"class.cl::sycl::item.3" = type { %"struct.cl::sycl::detail::ItemBase.4" }
%"struct.cl::sycl::detail::ItemBase.4" = type { %"class.cl::sycl::range.0", %"class.cl::sycl::id.2" }
%"class.cl::sycl::group" = type { %"class.cl::sycl::range.0", %"class.cl::sycl::range.0", %"class.cl::sycl::range.0", %"class.cl::sycl::id.2" }

$_ZTSZZ18call_command_queuePiENKUlRN2cl4sycl7handlerEE_clES3_EUlNS1_7nd_itemILi3EEEE_ = comdat any

define weak_odr dso_local spir_kernel void @_ZTSZZ18call_command_queuePiENKUlRN2cl4sycl7handlerEE_clES3_EUlNS1_7nd_itemILi3EEEE_(i32 addrspace(1)* %0, %"class.cl::sycl::id"* byval(%"class.cl::sycl::id") align 8 %1) local_unnamed_addr #0 comdat !kernel_arg_buffer_location !7 !sycl_kernel_omit_args !8 {
  %3 = getelementptr inbounds %"class.cl::sycl::id", %"class.cl::sycl::id"* %1, i64 0, i32 0, i32 0, i64 0
  %4 = addrspacecast i64* %3 to i64 addrspace(4)*
  %5 = load i64, i64 addrspace(4)* %4, align 8
  %6 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %5
  %7 = load <3 x i64>, <3 x i64> addrspace(4)* addrspacecast (<3 x i64> addrspace(1)* @__spirv_BuiltInLocalInvocationId to <3 x i64> addrspace(4)*), align 32, !noalias !9
  %8 = extractelement <3 x i64> %7, i64 0
  %9 = icmp ult i64 %8, 2147483648
  tail call void @llvm.assume(i1 %9)
  %10 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %8
  %11 = addrspacecast i32 addrspace(1)* %10 to i32 addrspace(4)*
  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !14
  %13 = tail call spir_func i32 @_Z17__spirv_GroupIAddjji(i32 2, i32 0, i32 %12) #4
  store i32 %13, i32 addrspace(4)* %11, align 4, !tbaa !14
  ret void
}

define dso_local spir_func void @_Z19block_reduce_kernelN2cl4sycl8accessorIiLi1ELNS0_6access4modeE1026ELNS2_6targetE2014ELNS2_11placeholderE0ENS0_3ext6oneapi22accessor_property_listIJEEEEERKNS0_7nd_itemILi3EEE(%"class.cl::sycl::accessor"* nocapture readonly byval(%"class.cl::sycl::accessor") align 8 %0, %"class.cl::sycl::nd_item" addrspace(4)* nocapture readonly align 8 dereferenceable(216) %1) local_unnamed_addr #1 {
  %3 = addrspacecast %"class.cl::sycl::accessor"* %0 to %"class.cl::sycl::accessor" addrspace(4)*
  %4 = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item" addrspace(4)* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i64 2
  %5 = load i64, i64 addrspace(4)* %4, align 8, !tbaa !18
  %6 = icmp ult i64 %5, 2147483648
  tail call void @llvm.assume(i1 %6)
  %7 = getelementptr inbounds %"class.cl::sycl::accessor", %"class.cl::sycl::accessor" addrspace(4)* %3, i64 0, i32 1, i32 0
  %8 = load i32 addrspace(1)*, i32 addrspace(1)* addrspace(4)* %7, align 8, !tbaa !20
  %9 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %5
  %10 = addrspacecast i32 addrspace(1)* %9 to i32 addrspace(4)*
  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !14
  %12 = tail call spir_func i32 @_Z17__spirv_GroupIAddjji(i32 2, i32 0, i32 %11) #4
  store i32 %12, i32 addrspace(4)* %10, align 4, !tbaa !14
  ret void
}

declare void @llvm.assume(i1 noundef) #2

declare dso_local spir_func i32 @_Z17__spirv_GroupIAddjji(i32, i32, i32) local_unnamed_addr #3

declare dso_local spir_func i32 @_Z18__spirv_ocl_printfPU3AS2Kcz(i8 addrspace(2)*, ...)

attributes #0 = { convergent norecurse "approx-func-fp-math"="true" "frame-pointer"="all" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/app/example.cpp" "uniform-work-group-size"="true" "unsafe-fp-math"="true" }
attributes #1 = { convergent norecurse "approx-func-fp-math"="true" "frame-pointer"="all" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="true" }
attributes #2 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #3 = { convergent "approx-func-fp-math"="true" "frame-pointer"="all" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="true" }
attributes #4 = { convergent }

!llvm.module.flags = !{!0, !1, !2}
!opencl.spir.version = !{!3}
!spirv.Source = !{!4}
!opencl.used.extensions = !{!5}
!opencl.used.optional.core.features = !{!5}
!opencl.compiler.options = !{!5}
!llvm.ident = !{!6}

!0 = !{i32 7, !"Dwarf Version", i32 4}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{i32 1, i32 2}
!4 = !{i32 4, i32 100000}
!5 = !{}
!6 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2022.1.0 (2022.1.0.20220316)"}
!7 = !{i32 -1, i32 -1, i32 -1, i32 -1}
!8 = !{i1 false, i1 true, i1 true, i1 false}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi3EN2cl4sycl2idILi3EEEE8initSizeEv: argument 0"}
!11 = distinct !{!11, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi3EN2cl4sycl2idILi3EEEE8initSizeEv"}
!12 = distinct !{!12, !13, !"_ZN7__spirvL21initLocalInvocationIdILi3EN2cl4sycl2idILi3EEEEET0_v: argument 0"}
!13 = distinct !{!13, !"_ZN7__spirvL21initLocalInvocationIdILi3EN2cl4sycl2idILi3EEEEET0_v"}
!14 = !{!15, !15, i64 0}
!15 = !{!"int", !16, i64 0}
!16 = !{!"omnipotent char", !17, i64 0}
!17 = !{!"Simple C++ TBAA"}
!18 = !{!19, !19, i64 0}
!19 = !{!"long", !16, i64 0}
!20 = !{!16, !16, i64 0}